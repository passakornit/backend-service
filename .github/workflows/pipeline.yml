name: Pipeline

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set Image Version to Build Number
      run: echo "IMAGE_VERSION=${{ github.run_number }}" >> $GITHUB_ENV

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_VERSION .

    - name: Install Trivy
      run: |
        curl -sfL https://github.com/aquasecurity/trivy/releases/download/v0.59.0/trivy_0.59.0_Linux-64bit.tar.gz -o trivy.tar.gz
        tar zxvf trivy.tar.gz
        sudo mv trivy /usr/local/bin/

    - name: Scan Docker image with Trivy
      id: trivy-scan
      continue-on-error: true 
      run: |
        REPORT=$(trivy image --exit-code 1 --severity CRITICAL --no-progress ***/***:$IMAGE_VERSION 2>&1 | tee /dev/stdout)
        SUMMARY=$(echo "$REPORT" | head -n 50)
        echo "report<<EOF" >> $GITHUB_OUTPUT
        echo "$SUMMARY" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Check Trivy scan output
      run: echo "Trivy Summary: ${{ steps.trivy-scan.outputs.report }}"

    - name: Send Failure Notification with Scan Results to Google Chat
      if: failure()
      run: |
        curl -X POST -H "Content-Type: application/json" \
        -d "{\"text\": \"🚨 CI/CD Pipeline FAILED: Critical vulnerabilities found.\n\nTrivy Scan Summary:\n\`\`\`\n${{ steps.trivy-scan.outputs.report }}\n\`\`\`\n🔗 [View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\"}" \
        ${{ secrets.GOOGLE_CHAT_WEBHOOK }}

    - name: Push Docker Image to ECR
      if: success()
      run: |
        docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_VERSION

    - name: Send Success Notification to Google Chat
      if: success()
      run: |
        MESSAGE="{\"text\": \"🚀 CI/CD Pipeline SUCCESS:\n\n📌 Repository: *${{ github.repository }}*\n🔄 Branch: *${{ github.ref_name }}*\n🏷️ Tag: *${{ env.IMAGE_VERSION }}*\n📦 Docker Image: *${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_VERSION }}*\n\n🛡️ Trivy Scan: ✅ Passed\n\n📊 Status: ✅ SUCCESS\n🔗 [View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\"}"
        curl -X POST -H "Content-Type: application/json" -d "$MESSAGE" "${{ secrets.GOOGLE_CHAT_WEBHOOK }}"
